@page "/managers"
@using XFoodBlazor.Web.Client.Services.Manager.GetList;
@using XFoodBlazor.Web.Client.Services.Manager;
@using XFoodBlazor.Web.Client.Services.Manager.Delete;
@using XFoodBlazor.Web.Client.Services.Manager.Create;
@using XFoodBlazor.Web.Client.Services.Pizzeria.GetList
@using XFoodBlazor.Web.Client.Services.Pizzeria
@inject IPizzeriaService PizzeriaService
@inject IManagerService ManagerService
@inject NavigationManager NavigationManager

<div class="d-flex">
    <h3>Список менеджеров</h3>
<button type="button" class="btn btn-success ms-auto" data-bs-toggle="modal" data-bs-target="#exampleModal2">Добавить менеджера</button>
</div>
<table class="table hovered text-center">
    <thead>
        <tr>
            <th>Имя</th>
            <th>Фамилия</th>
            <th>Действие</th>
        </tr>
    </thead>
    <tbody>

        @if (managers != null)
        {
            @foreach (var m in managers.List)
            {
                <tr>
                    <td>@m.FirstName</td>
                    <td>@m.LastName</td>      
                    <td>
                        <a class="btn btn-warning" href="@($"manager/{m.Id}")"><i class="bi bi-eye-fill"></i></a>
                        <a class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#exampleModal" @onclick="@(async () => await SetSelectedManager(m))" ><i class="bi bi-trash3-fill"></i></a>
                    </td>
                </tr>
            }
        }
        else
        {
            <span>Нету данных</span>
        }
    </tbody>
</table>

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
         <p>Вы действительно хотите удалить этого менеджера?</p>
      </div>
      <div class="modal-footer">
          <button type="button" @onclick="DeleteManager" data-bs-dismiss="modal" class="btn btn-primary">Да</button>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Нет</button>
      </div>
    </div>
  </div>
</div>


<div class="modal fade" id="exampleModal2" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="exampleModalLabel">Добавить менеджера</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="mb-3">
          <label for="exampleFormControlInput1" class="form-label">First Name:</label>
          <input type="text" class="form-control" id="exampleFormControlInput1" @bind="@FirstName">
        </div>
        <div class="mb-3">
          <label for="exampleFormControlInput1" class="form-label">Last Name:</label>
          <input type="text" class="form-control" id="exampleFormControlInput1" @bind="@LastName">
        </div>
        <div class="mb-3">
          <label for="exampleFormControlInput1" class="form-label">Telegram:</label>
          <input type="text" class="form-control" id="exampleFormControlInput1" @bind="@Telegram">
        </div>
        <div class="mb-3">
          <label for="exampleFormControlInput1" class="form-label">Email:</label>
          <input type="email" class="form-control" id="exampleFormControlInput1" @bind="@Email">
        </div>
        <div class="mb-3">
          <label for="exampleFormControlInput1" class="form-label">Pizzerias:</label>
        <select class="form-select" @bind="@PizzeriaId">
             <option>Выберите пиццерию</option>
            @if(pizzeriaResponse != null)
            {
                @foreach (var pizzeria in pizzeriaResponse.List)
                {
                    <option value="@pizzeria.Id">@pizzeria.Name</option>
                }
            }
            else
            {
                    <option>Нету данных</option>
            }
        </select>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" @onclick="CreateManager" data-bs-dismiss="modal" class="btn btn-primary">Добавить</button>
      </div>
    </div>
  </div>
</div>

@code {
    GetManagersResponse managers;
    DeleteManagersRequest deleteManagersRequest = new DeleteManagersRequest();
    DeleteManagersResponse deleteManagersResponse;
    CreateManagerRequest createManagerRequest = new CreateManagerRequest();
    CreateManagerResponse createManagerResponse;
    private ManagerView managerView;
    private string FirstName;
    private string LastName;
    private string Telegram;
    private string Email;
    private int PizzeriaId;

    GetListPizzeriaResponse pizzeriaResponse;


    protected override async Task OnInitializedAsync()
    {
        await RefreshManagersList();
        pizzeriaResponse = await PizzeriaService.GetListPizzeria(new GetListPizzeriaRequest());
    }
    private async Task DeleteManager()
    {
        deleteManagersRequest.Id = managerView.Id;
        deleteManagersResponse = await ManagerService.Delete(deleteManagersRequest);
        await RefreshManagersList();
    }
    private async Task RefreshManagersList()
    {
        managers = await ManagerService.GetManagers(new GetManagersRequest());
    }
    private async Task SetSelectedManager(ManagerView manager)
    {
        managerView = manager;
    }
    private async Task CreateManager()
    {
        createManagerRequest.FirstName = FirstName;
        createManagerRequest.LastName = LastName;
        createManagerRequest.PizzeriaId = PizzeriaId;
        createManagerRequest.Telegram = Telegram;
        createManagerRequest.Email = Email;
        createManagerResponse = await ManagerService.Create(createManagerRequest);
        FirstName = LastName = Telegram = Email = string.Empty;
        PizzeriaId = 0;
        await RefreshManagersList();
    }
}

