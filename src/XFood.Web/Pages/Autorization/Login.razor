@page "/login"
@using XFoodBlazor.Web.Client.Services.Authorization
@using XFoodBlazor.Web.Client.Services.Authorization.Login
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

@if (_showErrors)
{
    <div class="alert alert-danger" role="alert">
        <p>@_error</p>
    </div>
}


<section class="vh-100 bg-image"
         style="background-image: url('images/background.jpg'); background-repeat: no-repeat;background-size: cover;">
    <div class="mask d-flex align-items-center h-100 gradient-custom-3">
        <div class="container h-100">
            <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-12 col-md-9 col-lg-7 col-xl-6">
                    <div class="card" style="border-radius: 15px;">
                        <div class="card-body p-5">
                            <h2 class="text-uppercase text-center mb-5">Авторизация</h2>
                            <EditForm Model="_loginModel" OnValidSubmit="HandleLogin">
                                <DataAnnotationsValidator />
                                <ValidationSummary />

                                <div class="form-outline mb-4">
                                    <label class="form-label" for="emailOrLogin">Email</label>
                                    <InputText Id="email" class="form-control form-control-lg" @bind-Value="_loginModel.EmailOrLogin" />
                                    <ValidationMessage For="@(() => _loginModel.EmailOrLogin)" />
                                </div>
                                <div class="form-outline mb-4">
                                    <label class="form-label" for="password">Пароль</label>
                                    <InputText Id="password" type="password" class="form-control form-control-lg" @bind-Value="_loginModel.Password" />
                                    <ValidationMessage For="@(() => _loginModel.Password)" />
                                </div>
                                <div class="d-flex justify-content-center">
                                    <button type="submit" class="btn btn-success mt-3 btn-block btn-lg gradient-custom-4">Войти</button>
                                </div>
                            </EditForm>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {

    private readonly LoginRequest _loginModel = new();
    private bool _showErrors;
    private string _error = "";

    private async Task HandleLogin()
    {
        _showErrors = false;

        var result = await AuthService.Login(_loginModel);

        if (result.IsSuccess)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            _error = result.Error;
            _showErrors = true;
        }
    }

}